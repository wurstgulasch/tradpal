version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: tradpal_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - tradpal_monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: tradpal_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./infrastructure/monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - tradpal_monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:latest
    container_name: tradpal_node_exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - tradpal_monitoring
    restart: unless_stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: tradpal_alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./infrastructure/monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - tradpal_monitoring
    restart: unless-stopped

  pushgateway:
    image: prom/pushgateway:latest
    container_name: tradpal_pushgateway
    ports:
      - "9091:9091"
    networks:
      - tradpal_monitoring
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: tradpal_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - tradpal_monitoring
    restart: unless-stopped

  event-service:
    build:
      context: ../../services/event_system
      dockerfile: Dockerfile
    container_name: tradpal_event_service
    ports:
      - "8011:8011"
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - ../../logs:/app/logs
      - ../../cache:/app/cache
    networks:
      - tradpal_monitoring
    restart: unless-stopped
    depends_on:
      - redis
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8011/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:

  api-gateway:
    build:
      context: ../../services/api_gateway
      dockerfile: Dockerfile
    container_name: tradpal_api_gateway
    ports:
      - "8000:8000"
    environment:
      - JWT_SECRET_KEY=your-secret-key-here
      - PROMETHEUS_METRICS_PORT=8001
    volumes:
      - ../../logs:/app/logs
      - ../../cache:/app/cache
    networks:
      - tradpal_monitoring
    restart: unless-stopped
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  prometheus_data:
  grafana_data:
  redis_data:

networks:
  tradpal_monitoring:
    driver: bridge