apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: tradpal
  labels:
    app: notification-service
    component: microservice
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
        component: microservice
    spec:
      containers:
      - name: notification-service
        image: tradpal/notification-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8001
          name: http
          protocol: TCP
        env:
        - name: NOTIFICATION_MAX_WORKERS
          value: "3"
        - name: NOTIFICATION_QUEUE_SIZE
          value: "100"
        - name: NOTIFICATION_DEFAULT_CHANNELS
          value: "telegram,email"
        - name: NOTIFICATION_RATE_LIMIT_TELEGRAM
          value: "10"
        - name: NOTIFICATION_RATE_LIMIT_DISCORD
          value: "10"
        - name: NOTIFICATION_RATE_LIMIT_EMAIL
          value: "5"
        - name: NOTIFICATION_RETRY_ATTEMPTS
          value: "3"
        - name: NOTIFICATION_RETRY_DELAY
          value: "1.0"
        - name: NOTIFICATION_MAX_RETRY_DELAY
          value: "60.0"
        # Integration secrets (should be in secrets)
        - name: TELEGRAM_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: notification-secrets
              key: telegram-bot-token
        - name: DISCORD_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: notification-secrets
              key: discord-webhook-url
        - name: SMTP_SERVER
          valueFrom:
            secretKeyRef:
              name: notification-secrets
              key: smtp-server
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              name: notification-secrets
              key: smtp-username
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: notification-secrets
              key: smtp-password
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
      restartPolicy: Always
      imagePullSecrets:
      - name: regcred

---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: tradpal
  labels:
    app: notification-service
    component: microservice
spec:
  type: ClusterIP
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: http
  selector:
    app: notification-service

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: notification-service-ingress
  namespace: tradpal
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - notifications.tradpal.example.com
    secretName: notification-service-tls
  rules:
  - host: notifications.tradpal.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 8001

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: notification-service-config
  namespace: tradpal
data:
  NOTIFICATION_MAX_WORKERS: "3"
  NOTIFICATION_QUEUE_SIZE: "100"
  NOTIFICATION_DEFAULT_CHANNELS: "telegram,email"
  NOTIFICATION_RATE_LIMIT_TELEGRAM: "10"
  NOTIFICATION_RATE_LIMIT_DISCORD: "10"
  NOTIFICATION_RATE_LIMIT_EMAIL: "5"
  NOTIFICATION_RETRY_ATTEMPTS: "3"
  NOTIFICATION_RETRY_DELAY: "1.0"
  NOTIFICATION_MAX_RETRY_DELAY: "60.0"

---
apiVersion: v1
kind: Secret
metadata:
  name: notification-secrets
  namespace: tradpal
type: Opaque
data:
  # Base64 encoded values
  telegram-bot-token: <base64-encoded-token>
  discord-webhook-url: <base64-encoded-url>
  smtp-server: <base64-encoded-server>
  smtp-username: <base64-encoded-username>
  smtp-password: <base64-encoded-password>

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: notification-service-pdb
  namespace: tradpal
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: notification-service

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: notification-service-hpa
  namespace: tradpal
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: notification-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max