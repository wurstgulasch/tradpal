# TradPal Core Service Docker Configuration
# Add this to docker-compose.dev.yml or docker-compose.yml

# Core Service - Main orchestrator
core-service:
  build:
    context: .
    dockerfile: Dockerfile
  command: python -m services.core_service.main
  ports:
    - "8000:8000"  # Main API gateway port
  volumes:
    - ./cache:/app/cache:rw
    - ./logs:/app/logs:rw
    - ./config:/app/config:ro
    - ./data:/app/data:ro
  environment:
    - PYTHONPATH=/app
    - PYTHONUNBUFFERED=1
    - SERVICE_NAME=core_service
    - SERVICE_HOST=0.0.0.0
    - SERVICE_PORT=8000
    - REDIS_URL=redis://redis:6379
    - DEPLOYMENT_ENV=development
    - LOG_LEVEL=INFO
    # API Gateway Configuration
    - API_GATEWAY_ENABLED=true
    - API_GATEWAY_LOAD_BALANCING=round_robin
    - API_GATEWAY_RATE_LIMIT=1000
    # Event System Configuration
    - EVENT_SYSTEM_ENABLED=true
    - EVENT_SYSTEM_REDIS_STREAMS=true
    # Security Configuration
    - SECURITY_ENABLED=true
    - MTLS_ENABLED=false  # Disable for development
    - JWT_ENABLED=true
    - JWT_SECRET_KEY=dev-secret-key-change-in-production
    - JWT_EXPIRATION_HOURS=24
    # Calculations Configuration
    - CALCULATIONS_ENABLED=true
    - CALCULATIONS_VECTORIZED=true
    # Monitoring
    - PROMETHEUS_ENABLED=false  # Enable for production
    - HEALTH_CHECK_INTERVAL=30
    # Service Registry (will be populated by service discovery)
    - DATA_SERVICE_URL=http://data-service:8001
    - BACKTESTING_SERVICE_URL=http://backtesting-service:8002
    - TRADING_BOT_SERVICE_URL=http://trading-bot-service:8003
  depends_on:
    redis:
      condition: service_healthy
  networks:
    - tradpal-dev
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 40s
  restart: unless-stopped

# Update other services to depend on core-service
# Add this to existing service definitions:
# depends_on:
#   core-service:
#     condition: service_healthy