apiVersion: apps/v1
kind: Deployment
metadata:
  name: risk-service
  labels:
    app: risk-service
    component: tradpal-microservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: risk-service
  template:
    metadata:
      labels:
        app: risk-service
        component: tradpal-microservice
    spec:
      containers:
      - name: risk-service
        image: tradpal/risk-service:latest
        ports:
        - containerPort: 8001
          name: http
        env:
        - name: RISK_MAX_RISK_PER_TRADE
          value: "0.01"
        - name: RISK_MAX_PORTFOLIO_RISK
          value: "0.05"
        - name: RISK_MAX_LEVERAGE
          value: "2.0"
        - name: RISK_MIN_LEVERAGE
          value: "1.0"
        - name: RISK_KELLY_FRACTION
          value: "1.0"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: risk-service
  labels:
    app: risk-service
    component: tradpal-microservice
spec:
  selector:
    app: risk-service
  ports:
  - name: http
    port: 8001
    targetPort: 8001
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: risk-service-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - risk.tradpal.local
    secretName: risk-service-tls
  rules:
  - host: risk.tradpal.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: risk-service
            port:
              number: 8001

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: risk-service-config
  labels:
    app: risk-service
data:
  RISK_MAX_RISK_PER_TRADE: "0.01"
  RISK_MAX_PORTFOLIO_RISK: "0.05"
  RISK_MAX_LEVERAGE: "2.0"
  RISK_MIN_LEVERAGE: "1.0"
  RISK_KELLY_FRACTION: "1.0"
  RISK_ATR_MULTIPLIER_SL: "1.5"
  RISK_ATR_MULTIPLIER_TP: "3.0"

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: risk-service-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: risk-service

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: risk-service-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: risk-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max