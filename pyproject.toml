[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tradpal-indicator"
version = "2.5.0"
description = "Advanced Python trading indicator system with multi-timeframe analysis, ML enhancement, and real-time sentiment analysis"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
authors = [
    {name = "TradPal Team", email = "contact@tradpal.dev"},
]
maintainers = [
    {name = "TradPal Team", email = "contact@tradpal.dev"},
]
keywords = [
    "trading",
    "technical-analysis",
    "cryptocurrency",
    "bitcoin",
    "forex",
    "machine-learning",
    "sentiment-analysis",
    "algorithmic-trading",
    "backtesting",
    "risk-management",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "ccxt>=4.0.0",
    "matplotlib>=3.5.0",
    "pytest>=7.0.0",
    "python-dotenv>=1.0.0",
    "requests>=2.28.0",
    "deap>=1.3.0",
]

[project.optional-dependencies]
webui = [
    "streamlit>=1.28.0",
    "plotly>=5.17.0",
    "flask>=3.0.0",
    "flask-login>=0.6.3",
    "werkzeug>=3.0.0",
    "PyJWT>=2.8.0",
]
ml = [
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "optuna>=3.0.0",
    "shap>=0.42.0",
    "xgboost>=1.7.0",
]
sentiment = [
    "tweepy>=4.14.0",
    "textblob>=0.17.1",
    "transformers>=4.21.0",
    "newsapi-python>=0.2.7",
    "praw>=7.7.0",
]
performance = [
    "TA-Lib>=0.4.25",
    "ccxtpro>=1.0.0",
    "websocket-client>=1.6.0",
    "redis>=5.0.0",
]
monitoring = [
    "prometheus_client>=0.17.0",
    "psutil>=5.9.0",
    "hvac>=2.0.0",
    "boto3>=1.28.0",
]
integrations = [
    "twilio>=9.8.3",
]
dev = [
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "tomli>=2.0.1; python_version < '3.11'",  # For TOML parsing on older Python
]
all = [
    "tradpal-indicator[webui,ml,sentiment,performance,monitoring,integrations,dev]",
]

[project.urls]
Homepage = "https://github.com/wurstgulasch/tradpal_indicator"
Documentation = "https://github.com/wurstgulasch/tradpal_indicator#readme"
Repository = "https://github.com/wurstgulasch/tradpal_indicator.git"
Issues = "https://github.com/wurstgulasch/tradpal_indicator/issues"
Changelog = "https://github.com/wurstgulasch/tradpal_indicator/blob/main/CHANGELOG.md"

[project.scripts]
tradpal = "src.main:main"
tradpal-live = "src.main:run_live_mode"
tradpal-backtest = "src.main:run_backtest_mode"
tradpal-webui = "services.web_ui.app:main"

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "services*", "integrations*", "scripts*"]
exclude = ["tests*", "docs*", "examples*", "k8s*", "aws*", "monitoring*", "cache*", "output*", "logs*"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.md"]

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | env
  | _build
  | buck-out
  | build
  | dist
  | cache
  | output
  | logs
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ccxt.*",
    "ccxtpro.*",
    "talib.*",
    "sklearn.*",
    "torch.*",
    "optuna.*",
    "shap.*",
    "xgboost.*",
    "tweepy.*",
    "textblob.*",
    "transformers.*",
    "newsapi.*",
    "praw.*",
    "streamlit.*",
    "plotly.*",
    "flask.*",
    "flask_login.*",
    "werkzeug.*",
    "jwt.*",
    "twilio.*",
    "prometheus_client.*",
    "psutil.*",
    "hvac.*",
    "boto3.*",
    "redis.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["src", "services", "integrations", "scripts"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/conftest.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]